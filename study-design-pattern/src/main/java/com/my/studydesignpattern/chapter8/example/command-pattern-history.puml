@startuml

class Application {
- editor:Editor
- history:History
}

class History {
+ push()
+ pop()
}

class Invoker {
- command : Command
+ setCommand(command : Command)
+ execute()
}

abstract Command {
- application : Application
- receiver : Receiver
+ save()
+ undo()
+ execute()
}

class SomethingCommand {
- receiver
+ execute()
}

class UndoCommand {
- receiver
+ execute()
}

class Receiver {
+ doA()
+ doB()
}

Application --> Invoker
History -> Command
Command <|... UndoCommand
Command <|... SomethingCommand


Receiver <- SomethingCommand

Invoker -> Command

Application ---> Receiver
Application ---> History


@enduml
